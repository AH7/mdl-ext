/**
 * Copyright 2016 Leif Olsen. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Accordion
 * The Accordion CSS are based on / inspired by this CodePen: http://codepen.io/aann/pen/dPqBML
 */

// Use of this module requires the user to include variables from material-design-lite
//@import "../../node_modules/material-design-lite/src/variables";
//@import "../../node_modules/material-design-lite/src/mixins";
@import "../variables";

ul.mdlext-accordion {
  list-style: none;
}

// By default an Accordion has horizontal layout
.mdlext-accordion {
  width: 100%;   // Use a container to constrain width
  height: 100%;  // Use a container to constrain height
  padding: 0;
  margin: 0;
  display: flex;
  flex-flow: row nowrap;

  box-sizing: border-box;

  *, *::before, *::after, input[type="search"] {
    box-sizing: border-box;
  }

  .mdlext-accordion__panel {
    position: relative;
    margin: 0;
    padding: 0;
    width: $mdlext-accordion-header-height;
    overflow: hidden;
    transition: flex .15s ease-in;
    flex: 0 0 auto; // == flex: none;
    display: flex;
    flex-flow: row nowrap;

    &[open] {
      flex: 1 1 auto; // == flex: auto;
    }
    .mdlext-accordion__panel__header {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      position: relative;
      min-width: $mdlext-accordion-header-height;
      margin: 0;
      padding: 0;
      background-color: $mdlext-accordion-header-background-color;
      border-right: 1px solid $mdlext-accordion-header-border-color;
      user-select: none;

      &:hover {
        background-color: $mdlext-accordion-header-background-color-hover;
      }

      & a.mdlext-accordion__panel__header__tabstop,
      & .mdlext-accordion__panel__header__ripple-container {
        text-decoration: none;
        overflow: hidden;
        font-size: 0;
        position: absolute;
        top: 2px;
        right: 2px;
        bottom: 2px;
        left: 2px;
        z-index: 1;

        width: 100%;  // Needed by ripple
        height: 100%; // Needed by ripple

        // Fixes clipping bug in Safari.
        //-webkit-mask-image: -webkit-radial-gradient(circle, white, black);

        & .mdl-ripple {
          background: $mdlext-accordion-ripple-color;
        }

        &:focus {
          outline: thin solid $mdlext-accordion-header-background-color;
        }
      }

      .mdlext-accordion__panel__header__transform {
        white-space: nowrap;
        margin: 0;
        padding: 0 $mdlext-accordion-header-padding;
        position: absolute;
        bottom: 0;
        left: 0;
        height: $mdlext-accordion-header-height;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        transform: rotate(-90deg) translateY(100%);
        transform-origin: bottom left;

        > * {
          margin: 0;
          padding: 0;
          flex: 1;
        }
        > i,
        > img {
          flex: none;
        }
        > i + *,
        > img + * {
          margin-left: $mdlext-accordion-header-icon-text-space;
        }
      }
    }
    .mdlext-accordion__panel__state:after {
      content: '+';  // Should be modified by client
    }
    .mdlext-accordion__panel__content {
      width: 100%;
      padding: $mdlext-accordion-content-padding;
      overflow: hidden;  // Overflow hidden/auto can not be transitioned. Need a keyframe for that
    }

    &[open] {
      .mdlext-accordion__panel__state:after {
        content: '-';
      }
      .mdlext-accordion__panel__header {
        background-color: $mdlext-accordion-header-background-color-open;
        border-right: 1px solid $mdlext-accordion-header-border-color-open;
      }
      .mdlext-accordion__panel__content {
        overflow: auto;
        animation: mdlext-accordion__panel-open-keyframe .4s linear;
      }
    }
  }

  // Vertical accordion
  &.mdlext-accordion--vertical {
    flex-flow: column nowrap;

    .mdlext-accordion__panel {
      width: 100%;
      height: $mdlext-accordion-header-height;
      flex: none;
      flex-flow: column nowrap;

      .mdlext-accordion__panel__header {
        height: $mdlext-accordion-header-height;
        min-height: $mdlext-accordion-header-height;
        border-right: 0;
        border-bottom: 1px solid $mdlext-accordion-header-border-color;

        .mdlext-accordion__panel__header__transform {
          white-space: normal;
          position: relative;
          width: 100%;
          bottom: auto;
          left: auto;
          transform: rotate(0deg);
        }
      }
      &[open] {
        flex: 1;

        .mdlext-accordion__panel__header {
          border-right: 0;
          border-bottom: 1px solid $mdlext-accordion-header-border-color-open;
        }
      }
    }
  }
}


/*
 * Animating overflow:hidden -> overflow:auto, see: https://jdsteinbach.com/css/snippet-animate-display-transform/
 * Why do we need to animate this? The text overflow auto should be set after the accordion animation has completed!
 * If we omit this, the the overflow scrollbar will flicker during the accordion open transition
 */
@keyframes mdlext-accordion__panel-open-keyframe {
  0% {
    overflow: hidden;
  }
  100% {
    overflow: auto;
  }
}
