{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.min.js","webpack:///webpack/bootstrap 68e6dbe498dd90cd80d2","webpack:///./src/index.js","webpack:///./src/selectfield/selectfield.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","MaterialExtSelectfield","element","element_","init","window","prototype","Constant_","CssClasses_","LABEL","INPUT","IS_DIRTY","IS_FOCUSED","IS_DISABLED","IS_INVALID","IS_UPGRADED","onFocus_","event","classList","add","onBlur_","remove","onReset_","updateClasses_","checkDisabled","checkValidity","checkDirty","checkFocus","select_","disabled","Boolean","querySelector","validity","valid","value","length","disable","enable","change","label_","boundUpdateClassesHandler","bind","boundFocusHandler","boundBlurHandler","boundResetHandler","addEventListener","invalid","contains","hasAttribute","focus","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory();\n\telse\n\t\troot[\"index\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory();\n\telse\n\t\troot[\"index\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(3);\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * @license\n\t * Copyright 2016 Leif Olsen. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/*\n\t * Copied/Modified from https://github.com/google/material-design-lite/tree/master/src/textfield\n\t */\n\t\n\t(function () {\n\t  'use strict';\n\t\n\t  /**\n\t   * Class constructor for Selectfield MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\t\n\t  var MaterialExtSelectfield = function MaterialExtSelectfield(element) {\n\t    this.element_ = element;\n\t    this.init(); // Initialize instance.\n\t  };\n\t\n\t  window['MaterialExtSelectfield'] = MaterialExtSelectfield;\n\t\n\t  /**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\t  MaterialExtSelectfield.prototype.Constant_ = {};\n\t\n\t  /**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\t  MaterialExtSelectfield.prototype.CssClasses_ = {\n\t    LABEL: 'mdlext-selectfield__label',\n\t    INPUT: 'mdlext-selectfield__select',\n\t    IS_DIRTY: 'is-dirty',\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_INVALID: 'is-invalid',\n\t    IS_UPGRADED: 'is-upgraded'\n\t  };\n\t\n\t  /**\n\t   * Handle focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\t  /*eslint no-unused-vars: 0*/\n\t  MaterialExtSelectfield.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t  };\n\t\n\t  /**\n\t   * Handle lost focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\t  /*eslint no-unused-vars: 0*/\n\t  MaterialExtSelectfield.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t  };\n\t\n\t  /**\n\t   * Handle reset event from out side.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\t  MaterialExtSelectfield.prototype.onReset_ = function (event) {\n\t    this.updateClasses_();\n\t  };\n\t\n\t  /**\n\t   * Handle class updates.\n\t   *\n\t   * @private\n\t   */\n\t  MaterialExtSelectfield.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkValidity();\n\t    this.checkDirty();\n\t    this.checkFocus();\n\t  };\n\t\n\t  // Public methods.\n\t\n\t  /**\n\t   * Check the disabled state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.checkDisabled = function () {\n\t    if (this.select_.disabled) {\n\t      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t  };\n\t  MaterialExtSelectfield.prototype['checkDisabled'] = MaterialExtSelectfield.prototype.checkDisabled;\n\t\n\t  /**\n\t   * Check the focus state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.checkFocus = function () {\n\t    /*eslint no-extra-boolean-cast: 0*/\n\t    if (Boolean(this.element_.querySelector(':focus'))) {\n\t      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t    } else {\n\t      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t    }\n\t  };\n\t\n\t  MaterialExtSelectfield.prototype['checkFocus'] = MaterialExtSelectfield.prototype.checkFocus;\n\t\n\t  /**\n\t   * Check the validity state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.checkValidity = function () {\n\t    if (this.select_.validity) {\n\t      if (this.select_.validity.valid) {\n\t        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n\t      } else {\n\t        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n\t      }\n\t    }\n\t  };\n\t\n\t  MaterialExtSelectfield.prototype['checkValidity'] = MaterialExtSelectfield.prototype.checkValidity;\n\t\n\t  /**\n\t   * Check the dirty state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.checkDirty = function () {\n\t    if (this.select_.value && this.select_.value.length > 0) {\n\t      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n\t    } else {\n\t      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n\t    }\n\t  };\n\t\n\t  MaterialExtSelectfield.prototype['checkDirty'] = MaterialExtSelectfield.prototype.checkDirty;\n\t\n\t  /**\n\t   * Disable select field.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.disable = function () {\n\t    this.select_.disabled = true;\n\t    this.updateClasses_();\n\t  };\n\t\n\t  MaterialExtSelectfield.prototype['disable'] = MaterialExtSelectfield.prototype.disable;\n\t\n\t  /**\n\t   * Enable select field.\n\t   *\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.enable = function () {\n\t    this.select_.disabled = false;\n\t    this.updateClasses_();\n\t  };\n\t\n\t  MaterialExtSelectfield.prototype['enable'] = MaterialExtSelectfield.prototype.enable;\n\t\n\t  /**\n\t   * Update select field value.\n\t   *\n\t   * @param {string} value The value to which to set the control (optional).\n\t   * @public\n\t   */\n\t  MaterialExtSelectfield.prototype.change = function (value) {\n\t    this.select_.value = value || '';\n\t    this.updateClasses_();\n\t  };\n\t  MaterialExtSelectfield.prototype['change'] = MaterialExtSelectfield.prototype.change;\n\t\n\t  /**\n\t   * Initialize element.\n\t   */\n\t  MaterialExtSelectfield.prototype.init = function () {\n\t    if (this.element_) {\n\t      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n\t      this.select_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\t\n\t      if (this.select_) {\n\t        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n\t        this.boundFocusHandler = this.onFocus_.bind(this);\n\t        this.boundBlurHandler = this.onBlur_.bind(this);\n\t        this.boundResetHandler = this.onReset_.bind(this);\n\t        this.select_.addEventListener('change', this.boundUpdateClassesHandler);\n\t        this.select_.addEventListener('focus', this.boundFocusHandler);\n\t        this.select_.addEventListener('blur', this.boundBlurHandler);\n\t        this.select_.addEventListener('reset', this.boundResetHandler);\n\t\n\t        var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n\t        this.updateClasses_();\n\t        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t\n\t        if (invalid) {\n\t          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n\t        }\n\t        if (this.select_.hasAttribute('autofocus')) {\n\t          this.element_.focus();\n\t          this.checkFocus();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  // The component registers itself. It can assume componentHandler is available\n\t  // in the global scope.\n\t  /*eslint no-undef: 0*/\n\t  /*jshint undef:false */\n\t  componentHandler.register({\n\t    constructor: MaterialExtSelectfield,\n\t    classAsString: 'MaterialExtSelectfield',\n\t    cssClass: 'mdlext-js-selectfield',\n\t    widget: true\n\t  });\n\t})();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 68e6dbe498dd90cd80d2\n **/","'use strict';\nimport 'selectfield/selectfield';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2016 Leif Olsen. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * Copied/Modified from https://github.com/google/material-design-lite/tree/master/src/textfield\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Selectfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  const MaterialExtSelectfield = function MaterialExtSelectfield(element) {\n    this.element_ = element;\n    this.init(); // Initialize instance.\n  };\n\n  window['MaterialExtSelectfield'] = MaterialExtSelectfield;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialExtSelectfield.prototype.Constant_ = {\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialExtSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdlext-selectfield__label',\n    INPUT: 'mdlext-selectfield__select',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  /*eslint no-unused-vars: 0*/\n  MaterialExtSelectfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  /*eslint no-unused-vars: 0*/\n  MaterialExtSelectfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialExtSelectfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialExtSelectfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.checkDisabled = function() {\n    if (this.select_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialExtSelectfield.prototype['checkDisabled'] = MaterialExtSelectfield.prototype.checkDisabled;\n\n\n  /**\n   * Check the focus state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.checkFocus = function() {\n    /*eslint no-extra-boolean-cast: 0*/\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n\n  MaterialExtSelectfield.prototype['checkFocus'] = MaterialExtSelectfield.prototype.checkFocus;\n\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.checkValidity = function() {\n    if (this.select_.validity) {\n      if (this.select_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n\n  MaterialExtSelectfield.prototype['checkValidity'] = MaterialExtSelectfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.checkDirty = function() {\n    if (this.select_.value && this.select_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n\n  MaterialExtSelectfield.prototype['checkDirty'] = MaterialExtSelectfield.prototype.checkDirty;\n\n  /**\n   * Disable select field.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.disable = function() {\n    this.select_.disabled = true;\n    this.updateClasses_();\n  };\n\n  MaterialExtSelectfield.prototype['disable'] = MaterialExtSelectfield.prototype.disable;\n\n  /**\n   * Enable select field.\n   *\n   * @public\n   */\n  MaterialExtSelectfield.prototype.enable = function() {\n    this.select_.disabled = false;\n    this.updateClasses_();\n  };\n\n  MaterialExtSelectfield.prototype['enable'] = MaterialExtSelectfield.prototype.enable;\n\n  /**\n   * Update select field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialExtSelectfield.prototype.change = function(value) {\n    this.select_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialExtSelectfield.prototype['change'] = MaterialExtSelectfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialExtSelectfield.prototype.init = function() {\n    if (this.element_) {\n      this.label_ = this.element_.querySelector(`.${this.CssClasses_.LABEL}`);\n      this.select_ = this.element_.querySelector(`.${this.CssClasses_.INPUT}`);\n\n      if (this.select_) {\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.select_.addEventListener('change', this.boundUpdateClassesHandler);\n        this.select_.addEventListener('focus', this.boundFocusHandler);\n        this.select_.addEventListener('blur', this.boundBlurHandler);\n        this.select_.addEventListener('reset', this.boundResetHandler);\n\n        const invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.select_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  /*eslint no-undef: 0*/\n  /*jshint undef:false */\n  componentHandler.register({\n    constructor: MaterialExtSelectfield,\n    classAsString: 'MaterialExtSelectfield',\n    cssClass: 'mdlext-js-selectfield',\n    widget: true\n  });\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/selectfield/selectfield.js\n **/"],"sourceRoot":""}